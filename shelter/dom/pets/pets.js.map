{"version":3,"file":"pets/pets.js","mappings":"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","sources":["webpack://my-webpack-project/./src/assets/js/function.js","webpack://my-webpack-project/./src/assets/js/burger.js","webpack://my-webpack-project/./src/assets/js/page-element.js","webpack://my-webpack-project/./src/assets/js/popup.js","webpack://my-webpack-project/./src/assets/js/card.js","webpack://my-webpack-project/./src/assets/js/pagination.js","webpack://my-webpack-project/./src/pets/pets.js"],"sourcesContent":["export function removeClassName(className,...elements) {\n    for (let element of elements) {\n      element.classList.remove(className);\n    }\n  }\n\nexport function toggleClassName(className,...elements) {\n    for (let element of elements) {\n      element.classList.toggle(className);\n    }\n}\n\nexport function addClassName(className,...elements) {\n    for (let element of elements) {\n      element.classList.add(className);\n    }\n}\n\nexport function randomSort(array) {\n    let currentIndex = array.length;\n    let randomIndex;\n  \n    while (currentIndex != 0) {\n  \n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n  \n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n  \n    return array;\n  }\n\nexport function increaseCircle(operand, limit, reset) {\n    if (operand < limit) {\n        operand += 1;\n      } else {\n        operand = reset;\n      }\n    return operand\n}\n\nexport function decreaseCircle(operand, reset) {\n  if (operand !== 0) {\n    operand -= 1;\n  } else {\n    operand = reset;\n  }\n  return operand\n}\n\n","import * as myFunc from './function.js';\n \nfunction toggleMenu() { \n    menuToggle.onmousedown = function() {\n      return false;\n    };\n    isOpen = !isOpen;\n    myFunc.toggleClassName('active', menuToggle, menu, logo);\n    myFunc.toggleClassName('lock', body, logoMain);\n    const bodyLock = document.querySelector('.lock'); \n    bodyLock && bodyLock.addEventListener('click', closeMenu);\n}\n  \n  \nfunction closeMenu(event) {\n    if (event.target.classList.contains('nav-link') ||\n       (event.target.classList.contains('lock'))) {\n        isOpen = false;\n        myFunc.removeClassName('active', menuToggle, menu, logo);\n        myFunc.removeClassName('lock', body, logoMain);\n    }\n}\n\n\n// burger-menu\nlet isOpen = false\nconst body = document.body;\nconst menuToggle = document.querySelector('.menu-toggle');\nconst logo = document.querySelector('.double');\nconst logoMain = document.querySelector('.main');\nconst menu = document.querySelector('.nav');\nmenuToggle.addEventListener('click', toggleMenu);\nmenu.addEventListener('click', closeMenu);\n\n;\nwindow.addEventListener('resize', () => {\n    isOpen && (function (){\n                isOpen = false;\n                myFunc.removeClassName('active', menuToggle, menu, logo);\n                myFunc.removeClassName('lock', body, logoMain);\n              }());\n})","export class PageElement {\n    constructor(node, tagName = 'div', className = '', content = '', isAppend = true) {\n      const el = document.createElement(tagName);\n      el.className = className;\n      el.innerHTML = content;\n      this.node = el;\n\n      if (isAppend) node.append(el);\n      else node.prepend(el)\n    }\n  }\n\nexport class Link extends PageElement {\n    constructor(parent, className, textContent, href) {\n      super(parent, 'a', className);\n      this.node.textContent = textContent;\n      this.node.href = href;\n    }\n}\n\nexport class Image extends PageElement {\n    constructor(parent, className, src, alt) {\n      super(parent, 'img', className);\n      this.node.src = src;\n      this.node.alt = alt;\n    }\n}\n\nexport class Button extends PageElement {\n  constructor(parent, className, textContent, type=\"button\") {\n    super(parent, 'button', className);\n    this.node.textContent = textContent;\n    this.node.type = type;\n  }\n}\n\n\n","import { PageElement } from \"./page-element\";\n\nexport class Popup extends PageElement {\n\tconstructor(parent, cardNumber, data) {\n\t\t\tsuper(parent);\n\n\t\t\tconst overlay = new PageElement (this.node, 'div', 'popup-overlay');\n\t\t\tconst wrapper = new PageElement (overlay.node, 'div', 'popup-wrapper');\n\t\t\tconst closeButton = new PageElement (wrapper.node, 'div', 'popup-close-button');\n\t\t\tconst container = new PageElement (wrapper.node, 'div', 'popup-container');\n\n\t\t\tconst popupImg = new PageElement (container.node, 'div', 'popup-img');\n\t\t\tconst popupData = new PageElement (container.node, 'div', 'popup-data');\n\n\t\t\tthis.name = new PageElement (popupData.node, 'h3', 'title');\n\t\t\tconst subname = new PageElement (popupData.node, 'h4', 'subtitle');\n\n\t\t\tthis.type = new PageElement (subname.node, 'span', 'text');\n\t\t\tconst spacer = new PageElement (subname.node, 'span', 'text', ' - ');\n\t\t\tthis.breed = new PageElement (subname.node, 'span', 'text');\n\n\t\t\tthis.description = new PageElement (popupData.node, 'p', 'pets-description');\n\n\t\t\tconst list = new PageElement (container.node, 'ul', 'popup-list');\n\t\t\tthis.age = new PageElement (list.node, 'li', 'list-item', 'Age: <span><span>');\n\t\t\tthis.inoculations = new PageElement (list.node, 'li', 'list-item', 'Inoculations: <span><span>');\n\t\t\tthis.diseases = new PageElement (list.node, 'li', 'list-item', 'Diseases: <span><span>');\n\t\t\tthis.parasites = new PageElement (list.node, 'li', 'list-item', 'Parasites: <span><span>');\n\n\t\t\tcloseButton.node.onclick = ()=>{\n\t\t\t\tthis.onClose();\n\t\t\t}\n\t}\n\n\n}\n\nexport class DataItem {\n\tconstructor(name) {\n\t\tconsole.log()\n\t}\n\n\tloadData(){\n    return fetch('https://github.com/rolling-scopes-school/tasks/blob/master/tasks/markups/level-2/shelter/pets.json')\n\t\t\t\t\t\t.then(res=>res.json()).then(data => console.log(data))\n\t}\n}","import { PageElement, Image} from \"./page-element\";\nimport { Popup, DataItem } from \"./popup\";\n\nexport class Card extends PageElement {\n    constructor(parent, className, cardNumber, isAppend = true) {\n      super(parent, 'div', className, '', isAppend);\n      this.cardNumber = cardNumber;\n      const img = new Image(this.node, 'card-img', `assets/img/${this.cardNumber}.png`, `pets-img`);\n      const button = new PageElement(this.node, 'div', 'card-button', 'Learn more');\n      this.name = new PageElement(this.node, 'div','card-name', `${petNames[this.cardNumber-1]}`);\n\n\n      button.node.onclick = () => {\n        console.log ('fff')\n        const data  = new DataItem (this.name)\n        console.log(data.loadData());\n        const popup = new Popup (document.documentElement, this.cardNumber, data)\n        \tpopup.onClose = ()=>{\n          \tpopup.node.remove();\n          }\n      }\n\n    //   this.node. = () => {\n    //       return false\n    //   }\n    }\n\n    getCardNumber() {\n      return this.cardNumber\n    }\n}\n\nconst petNames = ['Katrine', 'Jennifer', 'Woody', 'Sophia', 'Timmy', 'Charly', 'Scarlett', 'Freddie'];","import {PageElement} from './page-element';\nimport {Card} from './card';\n\nexport class Pagination extends PageElement {\n  constructor(parent, className, cardQuantity, arrayIndexes) {\n    super(parent, 'div', className);\n\n    this.paginationControls = new Controls(this.node, 'pagination-controls', this);\n    this.paginationPets = new PageElement(this.node, 'div', 'pagination-pets');\n    this.paginationPetsDouble = new PageElement(this.node, 'div', 'pagination-pets-double');\n\n    this.isDouble = false;\n\n    this.cardQuantity = cardQuantity;\n    this.arrayIndexes = arrayIndexes;\n    this.pageQuantity = Math.ceil(48 / this.cardQuantity);\n    this.paginationControls.setpageQuantity(this.pageQuantity);\n    this.offset = 0;\n\n    this.cardList = this.createCards();\n\n  }\n\n  onChange(control) {\n    this.setOffset(control);\n    this.updateCards();\n  }\n\n  createCards() {\n\n    this.setViewControls();\n    let cardList = []\n    //console.log(this.arrayIndexes)\n    if (this.isDouble) {\n      for (let i = 0; i < this.cardQuantity; i++) {\n        cardList.push(new Card(this.paginationPetsDouble.node, 'card', this.arrayIndexes[i + this.offset]))\n      }     \n    } else {\n      for (let i = 0; i < this.cardQuantity; i++) {\n        cardList.push(new Card(this.paginationPets.node, 'card', this.arrayIndexes[i + this.offset]))\n      }\n    }\n  \n    return cardList\n  }\n\n  resizePagination(cardQuantity, arrayIndexes) {\n    \n    if (this.cardQuantity !== cardQuantity) {\n      this.cardQuantity = cardQuantity;\n      this.arrayIndexes = arrayIndexes;\n      this.pageQuantity = Math.ceil(48 / this.cardQuantity);\n      this.paginationControls.setpageQuantity(this.pageQuantity);\n  \n      this.offset = 0;\n      this.isDouble = false;\n      this.paginationPetsDouble.node.style.zIndex = -1;\n      this.paginationPets.node.innerHTML = '';\n      this.paginationPets.node.style.opacity = 1;\n  \n      this.cardList = this.createCards();\n    }\n    \n  }\n\n  setViewControls() {\n    this.paginationControls.setViewControls();\n  }\n\n  setOffset(key) {\n    switch (key) {\n      case 'leftScroll':\n        this.offset = 0;\n        break;\n      case 'prev':\n        this.offset = this.offset - this.cardQuantity;\n        break;\n      case 'next':\n        this.offset = this.offset + this.cardQuantity;\n        break;\n      case 'rightScroll':\n        this.offset = this.cardQuantity * (this.pageQuantity - 1);\n        break;\n    }\n  }\n\n  updateCards() {\n    this.isDouble = !this.isDouble;\n    if (this.isDouble) {\n\n      this.paginationPetsDouble.node.innerHTML = '';\n      this.cardList = this.createCards();\n\n      this.paginationPetsDouble.node.style.zIndex = '2'\n\n      this.paginationPets.node.style.opacity = 0;\n      this.paginationPetsDouble.node.style.opacity = 1;\n\n    } else {\n\n      this.paginationPets.node.innerHTML = '';\n      this.cardList = this.createCards();\n      \n      this.paginationPetsDouble.node.style.zIndex = '0'\n\n      this.paginationPets.node.style.opacity = 1;\n      this.paginationPetsDouble.node.style.opacity = 0;\n\n\n    }\n    \n  }\n}\n\nclass Controls extends PageElement {\n  constructor(parent, className, parentInstance) {\n    super(parent, 'div', className);\n    this.listControls = {\n      leftScroll: new PageElement(this.node, 'div', 'controls-button', '<<'),\n      prev: new PageElement(this.node, 'div', 'controls-button', '<'),\n      currentPage: new PageElement(this.node, 'div', 'controls-button', '1'),\n      next: new PageElement(this.node, 'div', 'controls-button', '>'),\n      rightScroll: new PageElement(this.node, 'div', 'controls-button', '>>'),\n    };\n    this.parentInstance = parentInstance;\n\n    for (let control in this.listControls) {\n      this.listControls[control].node.onclick = () => {\n        this.parentInstance.onChange(control);\n        this.handleChange(control);\n      }\n    }\n  }\n\n  handleChange(key) {\n    let currentPage = this.listControls.currentPage.node;\n    let numberPage = +this.listControls.currentPage.node.textContent;\n    switch (key) {\n      case 'leftScroll':\n        currentPage.textContent = '1';\n        this.setViewControls();\n        break;\n      case 'prev':\n        currentPage.textContent = `${numberPage - 1}`;\n        this.setViewControls();\n        break;\n      case 'next':\n        currentPage.textContent = `${numberPage + 1}`;\n        this.setViewControls();\n        break;\n      case 'rightScroll':\n        let pageQuantity = this.getpageQuantity();\n        currentPage.textContent = `${pageQuantity}`;\n        this.setViewControls();\n        break;\n    }\n  }\n  \n\n  setViewControls() {\n    let currentPage = this.listControls.currentPage.node;\n    let rightScroll = this.listControls.rightScroll.node;\n    let leftScroll = this.listControls.leftScroll.node;\n    let prev = this.listControls.prev.node;\n    let next = this.listControls.next.node;\n\n    currentPage.style.pointerEvents = 'none';\n    currentPage.classList.add('active');\n\n    if (currentPage.textContent === '1') {\n      leftScroll.classList.add('inactive');\n      prev.classList.add('inactive');\n    } else {\n      leftScroll.classList.remove('inactive');\n      prev.classList.remove('inactive');\n    }\n\n    let pageQuantity = this.getpageQuantity();\n    if (currentPage.textContent === `${pageQuantity}`) {\n      rightScroll.classList.add('inactive');\n      next.classList.add('inactive');\n    } else {\n      rightScroll.classList.remove('inactive');\n      next.classList.remove('inactive');\n    }\n  }\n\n  setpageQuantity(pageQuantity) {\n    this.pageQuantity = pageQuantity\n    let currentPage = this.listControls.currentPage.node;\n    currentPage.textContent = '1';\n    this.setViewControls();\n  }\n\n  getpageQuantity() {\n    return this.pageQuantity\n  }\n\n  getListControls() {\n    return this.listControls\n  }\n}\n\n","import petsStyle from \"./pets.scss\";\nimport burger from '../assets/js/burger.js';\nimport {Pagination} from '../assets/js/pagination.js';\nimport * as myFunc from '../assets/js/function.js';\n\n\nlet arrayIndexes = getArray();\nlet cardQuantity = getcardQuantity();\nconst contentSlider = document.querySelector('.pets-content');\nconst paginationPets = new Pagination(contentSlider, 'pagination', cardQuantity, arrayIndexes);\n\nfunction getcardQuantity(){\n  return (window.innerWidth >= 1280) ? 8 :\n         (window.innerWidth >= 768) ? 6 : 3\n}\n\nfunction getArray() {\n  let arrayPages = []\n\n  for (let i = 1; i <= 6; i++) {\n    let arrayCards = [];\n    for (let j = 1; j <= 8; j++) {\n      arrayCards.push(j);\n    }\n    myFunc.randomSort(arrayCards);\n\n    arrayPages.push(...arrayCards);\n  }\n  return arrayPages\n}\n\n\n\nlet resizeTimeout;\nwindow.addEventListener('resize', () => {\n    if (!resizeTimeout) {\n      cardQuantity = getcardQuantity();\n      arrayIndexes = getArray();\n      paginationPets.resizePagination(cardQuantity, arrayIndexes);\n      resizeTimeout = setTimeout(() => {\n        resizeTimeout = null;\n      }, 66)\n    }\n})"],"names":["removeClassName","className","elements","element","classList","remove","toggleClassName","toggle","randomSort","array","randomIndex","currentIndex","length","Math","floor","random","closeMenu","event","target","contains","isOpen","myFunc","menuToggle","menu","logo","body","logoMain","document","querySelector","addEventListener","onmousedown","bodyLock","window","PageElement","node","tagName","content","isAppend","el","createElement","innerHTML","this","append","prepend","Image","parent","src","alt","Popup","cardNumber","data","overlay","wrapper","closeButton","container","popupData","name","subname","type","breed","description","list","age","inoculations","diseases","parasites","onclick","onClose","DataItem","console","log","fetch","then","res","json","Card","button","petNames","loadData","popup","documentElement","resizeTimeout","Pagination","cardQuantity","arrayIndexes","paginationControls","Controls","paginationPets","paginationPetsDouble","isDouble","pageQuantity","ceil","setpageQuantity","offset","cardList","createCards","control","setOffset","updateCards","setViewControls","i","push","style","zIndex","opacity","key","parentInstance","listControls","leftScroll","prev","currentPage","next","rightScroll","onChange","handleChange","numberPage","textContent","getpageQuantity","pointerEvents","add","getArray","getcardQuantity","innerWidth","arrayPages","arrayCards","j","resizePagination","setTimeout"],"sourceRoot":""}